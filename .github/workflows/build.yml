name: Build and Release

on:
  push:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            platform: windows
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: x64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run dist:win
        env:
          EP_NEVER_PUBLISH: true

      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run dist:mac
        env:
          EP_NEVER_PUBLISH: true
          CSC_LINK: ${{ secrets.MAC_CERTS }}
          CSC_KEY_PASSWORD: ${{ secrets.MAC_CERTS_PASSWORD }}

      - name: Build Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run dist:linux
        env:
          EP_NEVER_PUBLISH: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            dist/*.exe
            dist/*.dmg
            dist/*.zip
            dist/*.AppImage
            dist/*.deb

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist-artifacts/**/*.exe
            dist-artifacts/**/*.dmg
            dist-artifacts/**/*.zip
            dist-artifacts/**/*.AppImage
            dist-artifacts/**/*.deb
          draft: false
          prerelease: false